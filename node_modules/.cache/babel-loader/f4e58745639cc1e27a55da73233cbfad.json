{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayoub\\\\Desktop\\\\ayoub\\\\etudes\\\\Cursus\\\\React\\\\petit projet React js\\\\src\\\\pages\\\\TousLesVideos.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport VideoList from '../components/videos/VideoList';\nimport FavoritesContext from '../store/favorites-context';\nimport Spinner from '../components/ui/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TousLesVideos() {\n  _s();\n\n  const favoritesCtx = useContext(FavoritesContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedvideos, setLoadedvideos] = useState([]);\n  const [isScrolling, setScrolling] = useState(false);\n  const [page, setPage] = useState(1);\n  const [pageSuivant, setPageSuivant] = useState('');\n  const recherche = favoritesCtx.recherche;\n  useEffect(() => {\n    !isScrolling && setIsLoading(true);\n    youtube.get('/search', {\n      params: {\n        q: recherche,\n        pageToken: isScrolling ? pageSuivant : null,\n        type: 'video'\n      }\n    }).then(response => {\n      return response.data;\n    }).then(data => {\n      setPageSuivant(data.nextPageToken);\n      const videos = [];\n\n      for (const key in data.items) {\n        const video = {\n          key: key,\n          ...data.items[key]\n        }; //\n\n        videos.push(video);\n      }\n\n      setIsLoading(false); //au cas du scrolling on ajoute les nouveaux videos par concat\n\n      isScrolling ? setLoadedvideos([...loadedvideos, ...videos]) : // cas du recherche\n      setLoadedvideos(videos);\n      setScrolling(false);\n    });\n  }, [recherche, page]);\n\n  window.onscroll = function () {\n    if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n      setScrolling(true);\n      setPage(prevPage => prevPage + 1);\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n      videos: loadedvideos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isScrolling && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TousLesVideos, \"Ek2BXM1Hs7gv+MEZpGAetQEATmM=\");\n\n_c = TousLesVideos;\nexport default TousLesVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"TousLesVideos\");","map":{"version":3,"sources":["C:/Users/ayoub/Desktop/ayoub/etudes/Cursus/React/petit projet React js/src/pages/TousLesVideos.js"],"names":["useState","useEffect","useContext","VideoList","FavoritesContext","Spinner","TousLesVideos","favoritesCtx","isLoading","setIsLoading","loadedvideos","setLoadedvideos","isScrolling","setScrolling","page","setPage","pageSuivant","setPageSuivant","recherche","youtube","get","params","q","pageToken","type","then","response","data","nextPageToken","videos","key","items","video","push","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","prevPage"],"mappings":"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","sourcesContent":["import { useState, useEffect ,useContext } from 'react';\n\nimport VideoList from '../components/videos/VideoList';\nimport FavoritesContext from '../store/favorites-context';\nimport Spinner from '../components/ui/Spinner';\n\n\n\nfunction TousLesVideos() { \nconst favoritesCtx = useContext(FavoritesContext);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedvideos, setLoadedvideos] = useState([]);\n  const [isScrolling, setScrolling] = useState(false);\n  const [page, setPage] = useState(1);\n  const [pageSuivant,setPageSuivant] = useState('')\n  const recherche = favoritesCtx.recherche\n\n  useEffect(() => {\n    !isScrolling && setIsLoading(true);\n    youtube.get('/search', { params: {  q: recherche , pageToken:isScrolling ? pageSuivant : null ,type:'video'   } })\n      .then((response) => {\n        return response.data;\n      })\n      .then((data) => {\n        setPageSuivant(data.nextPageToken)\n        const videos = [];\n        for (const key in data.items) {\n          const video = {\n            key: key ,\n            ...data.items[key]\n          };\n          //\n          videos.push(video);\n        }\n        setIsLoading(false);\n        //au cas du scrolling on ajoute les nouveaux videos par concat\n        isScrolling ? setLoadedvideos([...loadedvideos,...videos]):\n        // cas du recherche\n        setLoadedvideos(videos)\n\n        setScrolling(false)\n      });\n  }, [recherche,page]);\n\n\n  window.onscroll = function () {\n    if(window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight)\n    {\n      setScrolling(true)\n      setPage(prevPage => prevPage+1)\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <Spinner/>\n    );\n  }\n\n  return (\n    <section>\n      <h1>All videos</h1>\n      <VideoList videos={loadedvideos} />\n      {isScrolling && <Spinner/>}\n    </section>\n  );\n}\n\nexport default TousLesVideos;\n"]},"metadata":{},"sourceType":"module"}