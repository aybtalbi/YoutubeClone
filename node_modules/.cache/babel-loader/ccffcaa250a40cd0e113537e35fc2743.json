{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayoub\\\\Desktop\\\\ayoub\\\\professionel\\\\Projects\\\\YoutubeAPI\\\\youapi\\\\src\\\\pages\\\\TousLesVideos.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport ApiYoutube from '../store/API/ApiYoutube';\nimport VideoList from '../components/videos/VideoList';\nimport Context from '../store/Context/context';\nimport Spinner from '../components/ui/Spinner';\nimport Spinner2 from '../components/ui/Spinner2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TousLesVideos() {\n  _s();\n\n  const ctx = useContext(Context);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedvideos, setLoadedvideos] = useState([]);\n  const [isScrolling, setScrolling] = useState(false);\n  const [page, setPage] = useState(1);\n  const [pageSuivant, setPageSuivant] = useState('');\n  const recherche = ctx.recherche;\n  const ordreRecherche = ctx.ordreRecherche;\n  useEffect(() => {\n    !isScrolling && setIsLoading(true);\n    ApiYoutube().get('/search', {\n      params: {\n        q: recherche,\n        pageToken: isScrolling ? pageSuivant : null,\n        order: ordreRecherche\n      }\n    }).then(response => {\n      return response.data;\n    }).then(data => {\n      setPageSuivant(data.nextPageToken);\n      const videos = [];\n\n      for (const key in data.items) {\n        const video = {\n          key: key,\n          ...data.items[key]\n        }; //\n\n        videos.push(video);\n      }\n\n      setIsLoading(false); //au cas du scrolling on ajoute les nouveaux videos par concat\n\n      isScrolling ? setLoadedvideos([...loadedvideos, ...videos]) : // cas du recherche\n      setLoadedvideos(videos);\n      setScrolling(false);\n    });\n  }, [recherche, page, ordreRecherche]);\n\n  window.onscroll = function () {\n    if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n      setScrolling(true);\n      setPage(prevPage => prevPage + 1);\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(VideoList, {\n      videos: loadedvideos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), isScrolling && /*#__PURE__*/_jsxDEV(Spinner2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TousLesVideos, \"K3hRqTtYBDslGn7mm5iQ1EDuAVw=\");\n\n_c = TousLesVideos;\nexport default TousLesVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"TousLesVideos\");","map":{"version":3,"sources":["C:/Users/Ayoub/Desktop/ayoub/professionel/Projects/YoutubeAPI/youapi/src/pages/TousLesVideos.js"],"names":["useState","useEffect","useContext","ApiYoutube","VideoList","Context","Spinner","Spinner2","TousLesVideos","ctx","isLoading","setIsLoading","loadedvideos","setLoadedvideos","isScrolling","setScrolling","page","setPage","pageSuivant","setPageSuivant","recherche","ordreRecherche","get","params","q","pageToken","order","then","response","data","nextPageToken","videos","key","items","video","push","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","prevPage"],"mappings":"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","sourcesContent":["import { useState, useEffect ,useContext } from 'react';\r\nimport ApiYoutube from '../store/API/ApiYoutube'\r\nimport VideoList from '../components/videos/VideoList';\r\nimport Context from '../store/Context/context';\r\nimport Spinner from '../components/ui/Spinner';\r\nimport Spinner2 from '../components/ui/Spinner2';\r\n\r\nfunction TousLesVideos() { \r\n  const ctx = useContext(Context);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [loadedvideos, setLoadedvideos] = useState([]);\r\n  const [isScrolling, setScrolling] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [pageSuivant,setPageSuivant] = useState('')\r\n  const recherche = ctx.recherche\r\n  const ordreRecherche = ctx.ordreRecherche\r\n\r\n  useEffect(() => {\r\n    !isScrolling && setIsLoading(true);\r\n    ApiYoutube().get('/search', { params: {  q: recherche , pageToken:isScrolling ? pageSuivant : null , order:ordreRecherche} })\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .then((data) => {\r\n        setPageSuivant(data.nextPageToken)\r\n        const videos = [];\r\n        for (const key in data.items) {\r\n          const video = {\r\n            key: key ,\r\n            ...data.items[key]\r\n          };\r\n          //\r\n          videos.push(video);\r\n        }\r\n        setIsLoading(false);\r\n        //au cas du scrolling on ajoute les nouveaux videos par concat\r\n        isScrolling ? setLoadedvideos([...loadedvideos,...videos]):\r\n        // cas du recherche\r\n        setLoadedvideos(videos)\r\n\r\n        setScrolling(false)\r\n      });\r\n  }, [recherche,page,ordreRecherche]);\r\n\r\n\r\n  window.onscroll = function () {\r\n    if(window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight)\r\n    {\r\n      setScrolling(true)\r\n      setPage(prevPage => prevPage+1)\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Spinner/>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <VideoList videos={loadedvideos} />\r\n      {isScrolling && <Spinner2/>}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TousLesVideos;\r\n"]},"metadata":{},"sourceType":"module"}