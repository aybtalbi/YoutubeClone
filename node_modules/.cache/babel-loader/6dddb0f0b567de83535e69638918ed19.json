{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayoub\\\\Desktop\\\\ayoub\\\\etudes\\\\Cursus\\\\React\\\\petit projet React js\\\\src\\\\pages\\\\TousLesVideos.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport VideoList from '../components/videos/VideoList';\nimport FavoritesContext from '../store/favorites-context';\nimport Spinner from '../components/ui/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = 'AIzaSyAnFykwz8PKOIHh3VVCCb7cCdZj9hdFBDs';\nconst youtube = axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3/',\n  params: {\n    part: 'snippet',\n    maxResults: 5,\n    key: KEY\n  }\n});\n\nfunction TousLesVideos() {\n  _s();\n\n  const favoritesCtx = useContext(FavoritesContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedvideos, setLoadedvideos] = useState([]);\n  const [isScrolling, setScrolling] = useState(false);\n  const [pageSuivant, setPageSuivant] = useState('');\n  const recherche = favoritesCtx.recherche;\n  useEffect(() => {\n    setIsLoading(true);\n    youtube.get('/search', {\n      params: {\n        q: recherche,\n        pageToken: isScrolling ? pageSuivant : null\n      }\n    }).then(response => {\n      return response.data;\n    }).then(data => {\n      const videos = [];\n\n      for (const key in data.items) {\n        const video = {\n          key: key,\n          ...data.items[key]\n        }; //\n\n        videos.push(video);\n      }\n\n      setIsLoading(false); //au cas du scrolling on ajoute les nouveaux videos par concat\n\n      isScrolling ? setLoadedvideos(prevVideos => prevVideos.concat(videos)) : // cas du recherche\n      setLoadedvideos(videos);\n    });\n  }, [recherche, isScrolling]);\n\n  window.onscroll = function () {\n    if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n      setScrolling(true);\n      console.log(isScrolling);\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n      videos: loadedvideos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TousLesVideos, \"+iy0EKPsgc+K94nzm+W9hwIq3Uc=\");\n\n_c = TousLesVideos;\nexport default TousLesVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"TousLesVideos\");","map":{"version":3,"sources":["C:/Users/ayoub/Desktop/ayoub/etudes/Cursus/React/petit projet React js/src/pages/TousLesVideos.js"],"names":["useState","useEffect","useContext","axios","VideoList","FavoritesContext","Spinner","KEY","youtube","create","baseURL","params","part","maxResults","key","TousLesVideos","favoritesCtx","isLoading","setIsLoading","loadedvideos","setLoadedvideos","isScrolling","setScrolling","pageSuivant","setPageSuivant","recherche","get","q","pageToken","then","response","data","videos","items","video","push","prevVideos","concat","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect ,useContext } from 'react';\nimport axios from 'axios';\nimport VideoList from '../components/videos/VideoList';\nimport FavoritesContext from '../store/favorites-context';\nimport Spinner from '../components/ui/Spinner';\n\n\nconst KEY = 'AIzaSyAnFykwz8PKOIHh3VVCCb7cCdZj9hdFBDs'; \n\nconst youtube = axios.create({\n    baseURL: 'https://www.googleapis.com/youtube/v3/',\n    params: {\n        part: 'snippet',\n        maxResults: 5,\n        key: KEY\n    }\n})\n\n\nfunction TousLesVideos() {\n  \nconst favoritesCtx = useContext(FavoritesContext);\n\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedvideos, setLoadedvideos] = useState([]);\n  const [isScrolling, setScrolling] = useState(false);\n  const [pageSuivant,setPageSuivant] = useState('')\n  const recherche = favoritesCtx.recherche\n\n  useEffect(() => {\n    setIsLoading(true);\n    youtube.get('/search', { params: {  q: recherche , pageToken:isScrolling ? pageSuivant : null   } })\n      .then((response) => {\n        return response.data;\n      })\n      .then((data) => {\n        const videos = [];\n        for (const key in data.items) {\n          const video = {\n            key: key ,\n            ...data.items[key]\n          };\n          //\n          videos.push(video);\n        }\n        setIsLoading(false);\n        //au cas du scrolling on ajoute les nouveaux videos par concat\n        isScrolling ? setLoadedvideos(prevVideos => prevVideos.concat(videos) ):\n        // cas du recherche\n        setLoadedvideos(videos)\n\n      });\n  }, [recherche,isScrolling]);\n\n\n  window.onscroll = function () {\n    if(window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight)\n    {\n      setScrolling(true)\n      console.log(isScrolling)\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <Spinner/>\n    );\n  }\n\n  return (\n    <section>\n      <h1>All videos</h1>\n      <VideoList videos={loadedvideos} />\n    </section>\n  );\n}\n\nexport default TousLesVideos;\n"]},"metadata":{},"sourceType":"module"}